import { useState, FormEvent, CSSProperties } from 'react';
import Button from '../components/common/Button';
import Card from '../components/common/Card';
import Input from '../components/common/Input';
import Textarea from '../components/common/Textarea';

interface QuickFormData {
  name: string;
  phone: string;
  description: string;
}

export default function HomePage() {
  const [formData, setFormData] = useState<QuickFormData>({
    name: '',
    phone: '',
    description: '',
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [showSuccess, setShowSuccess] = useState(false);

  const handleQuickSubmit = async (e: FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);

    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    setTimeout(() => {
      setIsSubmitting(false);
      setShowSuccess(true);
      setFormData({ name: '', phone: '', description: '' });
      
      setTimeout(() => setShowSuccess(false), 5000);
    }, 1000);
  };

  return (
    <>
        {/* Hero —Å–µ–∫—Ü–∏—è */}
        <section style={heroStyle}>
          <div style={heroContentStyle}>
            <h1 style={heroTitleStyle}>
              –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –ø–æ–º–æ—â—å
            </h1>
            <p style={heroSubtitleStyle}>
              –†–µ–º–æ–Ω—Ç, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ –∏ –Ω–æ—É—Ç–±—É–∫–æ–≤. 
              –ë—ã—Å—Ç—Ä–æ, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ, —Å –≥–∞—Ä–∞–Ω—Ç–∏–µ–π.
            </p>
            <div style={heroButtonsStyle}>
              <Button onClick={() => window.location.href = '/services'}>
                –ù–∞—à–∏ —É—Å–ª—É–≥–∏
              </Button>
              <Button 
                variant="secondary"
                onClick={() => document.getElementById('quick-form')?.scrollIntoView({ behavior: 'smooth' })}
              >
                –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </div>
          </div>
        </section>

        {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
        <section style={advantagesStyle}>
          <h2 style={sectionTitleStyle}>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å</h2>
          <div style={advantagesGridStyle}>
            <Card>
              <div style={advantageCardStyle}>
                <span style={advantageIconStyle}>‚ö°</span>
                <h3 style={advantageTitleStyle}>–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–∫–ª–∏–∫</h3>
                <p style={advantageTextStyle}>
                  –í—ã–µ–∑–¥ –º–∞—Å—Ç–µ—Ä–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤. –°—Ä–æ—á–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –∑–∞ 24 —á–∞—Å–∞.
                </p>
              </div>
            </Card>

            <Card>
              <div style={advantageCardStyle}>
                <span style={advantageIconStyle}>üéì</span>
                <h3 style={advantageTitleStyle}>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º</h3>
                <p style={advantageTextStyle}>
                  –°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –±–æ–ª–µ–µ 10 –ª–µ—Ç.
                </p>
              </div>
            </Card>

            <Card>
              <div style={advantageCardStyle}>
                <span style={advantageIconStyle}>üí∞</span>
                <h3 style={advantageTitleStyle}>–ß–µ—Å—Ç–Ω—ã–µ —Ü–µ–Ω—ã</h3>
                <p style={advantageTextStyle}>
                  –ü—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞ –º–µ—Å—Ç–µ.
                </p>
              </div>
            </Card>

            <Card>
              <div style={advantageCardStyle}>
                <span style={advantageIconStyle}>‚úÖ</span>
                <h3 style={advantageTitleStyle}>–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</h3>
                <p style={advantageTextStyle}>
                  –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ –≤—Å–µ –≤–∏–¥—ã —Ä–∞–±–æ—Ç –¥–æ 6 –º–µ—Å—è—Ü–µ–≤. –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–µ–º.
                </p>
              </div>
            </Card>
          </div>
        </section>

        {/* –ë—ã—Å—Ç—Ä–∞—è —Ñ–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ */}
        <section id="quick-form" style={quickFormSectionStyle}>
          <div style={quickFormContainerStyle}>
            <h2 style={sectionTitleStyle}>–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</h2>
            <p style={quickFormSubtitleStyle}>
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
            </p>

            {showSuccess && (
              <div style={successMessageStyle}>
                ‚úì –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
              </div>
            )}

            <form onSubmit={handleQuickSubmit} style={formStyle}>
              <Input
                label="–í–∞—à–µ –∏–º—è"
                type="text"
                value={formData.name}
                onChange={(value) => setFormData({ ...formData, name: value })}
                placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                required
                disabled={isSubmitting}
              />

              <Input
                label="–¢–µ–ª–µ—Ñ–æ–Ω"
                type="tel"
                value={formData.phone}
                onChange={(value) => setFormData({ ...formData, phone: value })}
                placeholder="+7 (999) 123-45-67"
                required
                disabled={isSubmitting}
              />

              <Textarea
                label="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É"
                value={formData.description}
                onChange={(value) => setFormData({ ...formData, description: value })}
                placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É..."
                required
                disabled={isSubmitting}
                rows={4}
              />

              <Button type="submit" disabled={isSubmitting}>
                {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
              </Button>
            </form>

            <p style={noteStyle}>
              –ò–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º: <a href="tel:+7XXXXXXXXXX" style={linkStyle}>+7 (XXX) XXX-XX-XX</a>
            </p>
          </div>
        </section>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <section style={contactInfoStyle}>
          <div style={contactGridStyle}>
            <div style={contactItemStyle}>
              <span style={contactIconStyle}>üìû</span>
              <div>
                <h3 style={contactTitleStyle}>–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                <p style={contactTextStyle}>+7 (XXX) XXX-XX-XX</p>
              </div>
            </div>

            <div style={contactItemStyle}>
              <span style={contactIconStyle}>üìß</span>
              <div>
                <h3 style={contactTitleStyle}>Email</h3>
                <p style={contactTextStyle}>info@pchelp.example</p>
              </div>
            </div>

            <div style={contactItemStyle}>
              <span style={contactIconStyle}>üìç</span>
              <div>
                <h3 style={contactTitleStyle}>–ê–¥—Ä–µ—Å</h3>
                <p style={contactTextStyle}>–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 1</p>
              </div>
            </div>

            <div style={contactItemStyle}>
              <span style={contactIconStyle}>üïê</span>
              <div>
                <h3 style={contactTitleStyle}>–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
                <p style={contactTextStyle}>–ü–Ω-–ü—Ç: 9:00-18:00<br />–°–±-–í—Å: 10:00-16:00</p>
              </div>
            </div>
          </div>
        </section>
    </>
  );
}

// –°—Ç–∏–ª–∏
const heroStyle: CSSProperties = {
  background: 'linear-gradient(135deg, #2563eb 0%, #1e40af 100%)',
  color: '#ffffff',
  padding: '5rem 1rem',
  textAlign: 'center',
};

const heroContentStyle: CSSProperties = {
  maxWidth: '800px',
  margin: '0 auto',
};

const heroTitleStyle: CSSProperties = {
  fontSize: '3rem',
  fontWeight: 'bold',
  marginBottom: '1.5rem',
  lineHeight: '1.2',
};

const heroSubtitleStyle: CSSProperties = {
  fontSize: '1.25rem',
  marginBottom: '2.5rem',
  opacity: 0.95,
  lineHeight: '1.6',
};

const heroButtonsStyle: CSSProperties = {
  display: 'flex',
  gap: '1rem',
  justifyContent: 'center',
  flexWrap: 'wrap',
};

const advantagesStyle: CSSProperties = {
  maxWidth: '1280px',
  margin: '0 auto',
  padding: '4rem 1rem',
};

const sectionTitleStyle: CSSProperties = {
  fontSize: '2.25rem',
  fontWeight: 'bold',
  textAlign: 'center',
  color: '#1e293b',
  marginBottom: '3rem',
};

const advantagesGridStyle: CSSProperties = {
  display: 'grid',
  gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
  gap: '2rem',
};

const advantageCardStyle: CSSProperties = {
  textAlign: 'center',
};

const advantageIconStyle: CSSProperties = {
  fontSize: '3rem',
  marginBottom: '1rem',
  display: 'block',
};

const advantageTitleStyle: CSSProperties = {
  fontSize: '1.25rem',
  fontWeight: '600',
  color: '#1e293b',
  marginBottom: '0.75rem',
};

const advantageTextStyle: CSSProperties = {
  fontSize: '0.95rem',
  color: '#64748b',
  lineHeight: '1.6',
};

const quickFormSectionStyle: CSSProperties = {
  backgroundColor: '#ffffff',
  padding: '4rem 1rem',
};

const quickFormContainerStyle: CSSProperties = {
  maxWidth: '600px',
  margin: '0 auto',
};

const quickFormSubtitleStyle: CSSProperties = {
  textAlign: 'center',
  color: '#64748b',
  marginBottom: '2rem',
  fontSize: '1rem',
};

const formStyle: CSSProperties = {
  display: 'flex',
  flexDirection: 'column',
  gap: '1.25rem',
  marginBottom: '1.5rem',
};

const successMessageStyle: CSSProperties = {
  padding: '1rem',
  backgroundColor: '#dcfce7',
  border: '1px solid #22c55e',
  borderRadius: '0.375rem',
  color: '#166534',
  fontSize: '0.95rem',
  fontWeight: 500,
  marginBottom: '1.5rem',
  textAlign: 'center',
};

const noteStyle: CSSProperties = {
  textAlign: 'center',
  color: '#64748b',
  fontSize: '0.95rem',
};

const linkStyle: CSSProperties = {
  color: '#2563eb',
  textDecoration: 'none',
  fontWeight: 500,
};

const contactInfoStyle: CSSProperties = {
  backgroundColor: '#f1f5f9',
  padding: '3rem 1rem',
};

const contactGridStyle: CSSProperties = {
  maxWidth: '1280px',
  margin: '0 auto',
  display: 'grid',
  gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
  gap: '2rem',
};

const contactItemStyle: CSSProperties = {
  display: 'flex',
  alignItems: 'flex-start',
  gap: '1rem',
};

const contactIconStyle: CSSProperties = {
  fontSize: '2rem',
};

const contactTitleStyle: CSSProperties = {
  fontSize: '1rem',
  fontWeight: '600',
  color: '#1e293b',
  marginBottom: '0.5rem',
};

const contactTextStyle: CSSProperties = {
  fontSize: '0.95rem',
  color: '#64748b',
  lineHeight: '1.6',
};